// ✅ stub the bootstrap css import
jest.mock('bootstrap/dist/css/bootstrap.min.css', () => ({}), { virtual: true });

// ✅ mock react-dom/client BEFORE requiring './main'
const mockRender = jest.fn();
jest.mock('react-dom/client', () => ({
  createRoot: jest.fn(() => ({ render: mockRender })),
}));

// ✅ light mock for your lib so children render
jest.mock('@wf/react-library', () => ({
  ConfigContextProvider: ({ children }: any) => <>{children}</>,
}));

// ✅ stub App so we don’t render the real tree
jest.mock('./App', () => () => <div>MockApp</div>);

describe('bootstrap', () => {
  it('renders App within ConfigContextProvider and React.StrictMode', () => {
    // Import AFTER mocks so main.tsx runs with the mocked createRoot
    require('./main');

    // Pull the mocked function to assert on it
    const { createRoot } = require('react-dom/client');

    expect(createRoot).toHaveBeenCalled();   // root created
    expect(mockRender).toHaveBeenCalled();   // App rendered
  });
});
