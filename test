// src/App.test.tsx  (only the footer expectations changed below)

// ...existing imports & mocks stay exactly the same...

describe('App â†’ Template config', () => {
  beforeEach(() => {
    jest.clearAllMocks();
  });

  test('full config with parsed footer version from buildName', () => {
    jest.doMock('./app/config/appConfiguration.json', () => ({
      buildName: 'RELEASE :1.2.3',
    }));
    const config = renderFreshAppAndGetConfig();

    // ...app, theme, header expectations unchanged...

    // footer (FIX: include mode)
    expect(config.footer).toEqual({ mode: 'minimum', version: '1.2.3' });

    // ...routes & featureFlags expectations unchanged...
  });

  test('uses default footer version when buildName is empty/whitespace', () => {
    jest.doMock('./app/config/appConfiguration.json', () => ({ buildName: '   ' }));
    const config = renderFreshAppAndGetConfig();

    // footer (FIX: include mode)
    expect(config.footer).toEqual({ mode: 'minimum', version: '1.0.0' });
  });

  test('parses footer version when buildName is "RELEASE :2.3.4"', () => {
    jest.doMock('./app/config/appConfiguration.json', () => ({ buildName: 'RELEASE :2.3.4' }));
    const config = renderFreshAppAndGetConfig();

    // footer (FIX: include mode)
    expect(config.footer).toEqual({ mode: 'minimum', version: '2.3.4' });
  });
});
