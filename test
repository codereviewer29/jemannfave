// src/sideNavbar/boarding/intake-components/guidelinesIntakeForm.test.tsx
import React from 'react';
import { render, screen } from '@testing-library/react';

// MUI Box stub
jest.mock('@mui/material', () => {
  const React = require('react');
  return {
    __esModule: true,
    Box: ({ children, className }: any) => (
      <div data-testid="mui-box" className={className}>
        {children}
      </div>
    ),
  };
});

// SUT
import GuidelinesIntakeForm from './guidelinesIntakeForm';

describe('GuidelinesIntakeForm', () => {
  test('renders the guideline container with class', () => {
    render(<GuidelinesIntakeForm />);
    const box = screen.getByTestId('mui-box');
    expect(box).toBeInTheDocument();
    expect(box).toHaveClass('intakeGuidelineClass');
  });

  test('renders all 10 guideline points', () => {
    render(<GuidelinesIntakeForm />);
    for (let i = 1; i <= 10; i++) {
      expect(screen.getByText(new RegExp(`^${i}\\.`))).toBeInTheDocument();
    }
  });

  test('contains important keywords', () => {
    render(<GuidelinesIntakeForm />);
    expect(screen.getByText(/Cloud Enablement Team/i)).toBeInTheDocument();
    expect(screen.getByText(/Change Request/i)).toBeInTheDocument();
    expect(screen.getByText(/Autosys/i)).toBeInTheDocument();
  });

  // Optional: keep if you want snapshot protection for static copy
  test('matches snapshot', () => {
    const { container } = render(<GuidelinesIntakeForm />);
    expect(container).toMatchSnapshot();
  });
});
