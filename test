// jest.config.js
module.exports = {
  preset: 'ts-jest',
  testEnvironment: 'jsdom',
  setupFilesAfterEnv: ['<rootDir>/src/setupTests.ts'],
  modulePathIgnorePatterns: ['<rootDir>/dist/'],
  transform: {
    '^.+\\.(css|styl|less|sass|scss)$': 'jest-css-modules-transform',
  },
  transformIgnorePatterns: [
    'node_modules/(?!(@mui)/)', // keep your @mui allowlist
  ],
  // ðŸ‘‡ add this
  moduleNameMapper: {
    '^qf/react-library$': '<rootDir>/__mocks__/qf/react-library.ts',
    '\\.(css|scss)$': '<rootDir>/src/test-utils/styleStub.js', // optional; harmless
  },
};

// src/setupTests.ts
/* eslint-disable import/no-extraneous-dependencies */
import '@testing-library/jest-dom';

// Keep this pattern (matches your other repo)
beforeAll(() => {
  jest.spyOn(console, 'error').mockImplementation(() => {});
  jest.spyOn(console, 'log').mockImplementation(() => {});
});
afterAll(() => {
  jest.restoreAllMocks();
});

// DO NOT inline-mock 'qf/react-library' here.
// The moduleNameMapper points it to __mocks__/qf/react-library.ts

// Mock your API service hook once (adjust path if needed)
jest.mock('./services/useApiService', () => ({
  __esModule: true,
  default: () => ({ makeRequest: jest.fn() }),
}));

// Common browser shims
// @ts-ignore
if (!window.matchMedia) {
  window.matchMedia = () => ({
    matches: false, media: '', onchange: null,
    addListener: () => {}, removeListener: () => {},
    addEventListener: () => {}, removeEventListener: () => {},
    dispatchEvent: () => false,
  });
}
// @ts-ignore
if (!window.scrollTo) window.scrollTo = () => {};
