/* ------------------------------- Helpers ------------------------------ */

// Accept Testing Library's TextMatch (string | RegExp | function)
type TextMatch = Parameters<typeof screen.getByLabelText>[0];

const typeIn = (label: TextMatch, text: string) => {
  const el = screen.getByLabelText(label) as HTMLInputElement | HTMLTextAreaElement;
  const nameAttr = el.getAttribute('name') || '';
  fireEvent.change(el, { target: { name: nameAttr, value: text } });
};

const clickFirstButtonNamed = (name: RegExp) => {
  const btn = screen.getAllByRole('button').find((b) =>
    new RegExp(name, 'i').test((b.textContent || '').trim())
  );
  if (!btn) throw new Error(`Button with name ${name} not found`);
  fireEvent.click(btn);
};

const openSelectByLabel = (label: TextMatch) => {
  const input = screen.getByLabelText(label);
  // For MUI Select, mouseDown on the input opens the menu reliably
  fireEvent.mouseDown(input);
};
