// jest.config.js
/** Jest config for TS + ESM deps without changing tsconfig.json */
module.exports = {
  preset: 'ts-jest/presets/js-with-ts-esm',
  testEnvironment: 'jsdom',
  setupFilesAfterEnv: ['<rootDir>/src/setupTests.ts'],
  modulePathIgnorePatterns: ['<rootDir>/dist/'],

  transform: {
    '^.+\\.[tj]sx?$': 'ts-jest',
    '.+\\.(css|styl|less|sass|scss)$': 'jest-css-modules-transform',
  },

  // Key: transform ESM deps from node_modules
  transformIgnorePatterns: ['/node_modules/(?!(@mui|crypto-es)/)'],

  // Treat TS as ESM
  extensionsToTreatAsEsm: ['.ts', '.tsx'],

  globals: {
    'ts-jest': {
      useESM: true,
      // Inline TS compiler options for Jest ONLY (no new files, no editor warnings)
      tsconfig: {
        target: 'ES2020',
        module: 'NodeNext',
        moduleResolution: 'NodeNext',
        jsx: 'react-jsx',
        esModuleInterop: true,
        allowSyntheticDefaultImports: true,
        resolveJsonModule: true,
        isolatedModules: true,
        types: ['node', 'jest', '@testing-library/jest-dom']
      }
    }
  },

  // No separate mock files
  moduleNameMapper: {
    '\\.(css|styl|less|sass|scss)$': 'identity-obj-proxy',
    '\\.(gif|ttf|eot|svg|png|jpe?g|webp)$': 'identity-obj-proxy'
  },

  testPathIgnorePatterns: ['<rootDir>/src/buildInventory/*'],
  coveragePathIgnorePatterns: ['<rootDir>/src/buildInventory/*']
};
